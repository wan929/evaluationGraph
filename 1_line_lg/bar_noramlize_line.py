import matplotlib.pyplot as plt
import numpy as np
def get_pctl(a, p):
	i = int(len(a) * p)
	return a[i]
font = {'family': 'Times New Roman',
        'weight': 'normal',
        'size': 12,
        }

font1 = {'family': 'Times New Roman',
        'weight': 'normal',
        'size': 12,
        }

font2 = {'family': 'Times New Roman',
        'weight': 'normal',
        'size': 12,
        }
# single_10load
fct_0 = [1.084789970,1.000000000,1.000000000,1.000238796,81.044042281] #O
fct_1_0 = [1.000524625,1.000000000,1.000000000,1.000160102,1.497333439] #CV
fct_1_1 = [1.001203088,1.000000000,1.000000000,1.000238815,2.146679408] #SV
fct_2_0 = [1.002358291,1.000000000,1.000000000,1.119645848,1.256195713] #LG
fct_2_1 = [1.000189537,1.000000000,1.000000000,1.000238815,1.202071713] #LG_NB

# single_30load
# fct_0 = [1.085137064,1.000000000,1.000479386,1.005445227,81.083780537] #O
# fct_1_0 = [1.000686219,1.000000000,1.000479693,1.005441741,1.979738354] #CV
# fct_1_1 = [1.001376708,1.000000000,1.000479962,1.005441741,2.169220945] #SV
# fct_2_0 = [1.327983906,1.000000000,2.534617845,3.016642663,3.797933686] #LG
# fct_2_1 = [1.000377025,1.000000000,1.000559597,1.005732941,1.228384732] #LG_NB

# single_60load
# fct_0 = [1.088453651,1.000000000,1.012698666,1.023203713,81.087548015] #O
# fct_1_0 = [1.002701046,1.000000000,1.012717965,1.023202041,1.612155488] #CV
# fct_1_1 = [1.003409169,1.000000000,1.012711864,1.023203713,2.277180406] #SV
# fct_2_0 = [1.789683981,1.426986914,3.552105010,4.019543714,4.310995602] #LG
# fct_2_1 = [1.002457420,1.000000000,1.013022290,1.023680000,1.282084066] #LG_NB

# single_90load
# fct_0 = [1.356757529,1.256705901,1.506211180,1.572376839,137.752499000] #O
# fct_1_0 = [1.277933321,1.261331841,1.519535629,1.582059694,1.782844388] #CV
# fct_1_1 = [1.307260646,1.286057308,1.546990833,1.614270858,2.478163673] #SV
# fct_2_0 = [15.128046633,15.948832747,25.123772259,26.762148338,27.128324255] #LG
# fct_2_1 = [1.002457420,1.000000000,1.013022290,1.023680000,1.282084066] #LG_NB

# small_10load
# fct_0 = [1.112408367,1.000000000,1.136063317,1.865588438,70.832071576] #O
# fct_1_0 = [1.027323983,1.000000000,1.136338610,1.434273916,1.871163111] #CV
# fct_1_1 = [1.038390134,1.000000000,1.135994494,1.871369580,2.954232622] #SV
# fct_2_0 = [1.030350721,1.000000000,1.147900895,1.479628355,2.845354439] #LG
# fct_2_1 = [1.037752872,1.000000000,1.136132140,1.865588438,3.627460427] #LG_NB

# small_30load
# fct_0 = [1.134343872,1.003372333,1.332897454,1.937508603,71.019132829] #O
# fct_1_0 = [1.074307009,1.003372333,1.336682725,1.540192705,2.247212663] #CV
# fct_1_1 = [1.085298279,1.003716449,1.335030970,1.944872677,3.159256710] #SV
# fct_2_0 = [1.132554718,1.014934618,1.756847901,2.467928424,3.276600138] #LG
# fct_2_1 = [1.085432325,1.005849966,1.334962147,1.931108052,2.953062629] #LG_NB

# small_60load
# fct_0 = [1.345914764,1.165244322,1.969924295,2.494425327,71.887198899] #O
# fct_1_0 = [1.267156588,1.165244322,1.882931865,2.371369580,3.452512044] #CV
# fct_1_1 = [1.278860289,1.166827254,1.967790778,2.479766001,3.715003441] #SV
# fct_2_0 = [1.612353763,1.315141087,3.104404680,3.956297316,6.453819683] #LG
# fct_2_1 = [1.281113130,1.169304886,1.971576050,2.515003441,3.686648314] #LG_NB

# small_90load
# fct_0 = [4.154837316,3.464005506,9.437715072,12.210048176,139.595113558] #O
# fct_1_0 = [3.907327538,3.265794907,8.983895389,11.657123193,13.509359945] #CV
# fct_1_1 = [4.141301476,3.487198899,9.591190640,12.193048864,14.780385409] #SV
# fct_2_0 = [39.836673184,42.665794907,55.675636614,58.337026841,60.889125946] #LG
# fct_2_1 = [4.075021636,3.514728149,9.153131452,12.056710255,13.898279422] #LG_NB

methods = ['Origin', 'SADR_SV', 'SADR_CV', 'LinkGuardian']

load_levels = ['avg', '50%', '95%', '99%']

fct_values = {
    'avg': [fct_0[0]/fct_1_0[0], fct_1_1[0]/fct_1_0[0], 1, fct_2_0[0]/fct_1_0[0]],
    '50%': [fct_0[1]/fct_1_0[1], fct_1_1[1]/fct_1_0[1], 1, fct_2_0[1]/fct_1_0[1]],
    '95%': [fct_0[2]/fct_1_0[2], fct_1_1[2]/fct_1_0[2], 1, fct_2_0[2]/fct_1_0[2]],
    '99%': [fct_0[4]/fct_1_0[4], fct_1_1[4]/fct_1_0[4], 1, fct_2_0[4]/fct_1_0[4]],
    # 'max': [fct_0[4]/fct_1_0[4], fct_1_1[4]/fct_1_0[4], 1, fct_2_0[4]/fct_1_0[4]]
}
colors = ['red', 'orange', 'blue', 'green']#
# red, dimgray, magenta, limegreen, orange, dodgerblue
# 绘制柱状图
bar_width = 0.2
index = np.arange(len(load_levels))

fig, ax = plt.subplots(figsize=(5,2))

for i, method in enumerate(methods):
    ax.bar(index + i * bar_width, [fct_values[load][i] for load in load_levels], bar_width, label=method, color = colors[i])

# 设置图表参数
ax.set_xlabel('FCT Metric', fontproperties = font)
ax.set_ylabel('Normalized FCT', fontproperties = font)
#ax.set_title('FCT Values at Different Load Levels for Different Methods')
ax.set_xticks(index + bar_width * (len(methods) - 1) / 2, fontproperties = font)
ax.set_xticklabels(load_levels, fontproperties = font1)
plt.ylim(0, 15.1)
plt.yticks(np.arange(0, 15.1, 5), fontproperties = font1)
#ax.legend()
# 显示图例在图片的外部上层
ax.legend(loc='upper center', bbox_to_anchor=(0.5, 1.2), fancybox=True, ncol=2, prop = font2, frameon = False)
plt.tick_params(direction = 'in', top = False, bottom = False, left = True, right = False)
plt.savefig('/home/wan/Experimental_Graph/paper/line_lg/small/90load.pdf', format = 'pdf' , dpi = 800 ,bbox_inches = 'tight')
# 显示图表
plt.show()